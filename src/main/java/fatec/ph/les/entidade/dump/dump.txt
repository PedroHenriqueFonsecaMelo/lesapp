<body> 
<form action="/cliHome/singup" method="post" > 
<div><input name="firstName" placeholder="First name">
</div> <div><input name="email" placeholder="Email">
</div> <div><input name="password" placeholder="Password" type="password"></div> 
<div><input type="Submit"></div> </form>

<div class="col-12 col-sm-6 mb-3">
              <select class="form-select shadow-none" id="region" disabled required data-input>
                <option selected>Estado</option>
                <option value="AC">Acre</option>
                <option value="AL">Alagoas</option>
                <option value="AP">Amapá</option>
                <option value="AM">Amazonas</option>
                <option value="BA">Bahia</option>
                <option value="CE">Ceará</option>
                <option value="DF">Distrito Federal</option>
                <option value="ES">Espírito Santo</option>
                <option value="GO">Goiás</option>
                <option value="MA">Maranhão</option>
                <option value="MT">Mato Grosso</option>
                <option value="MS">Mato Grosso do Sul</option>
                <option value="MG">Minas Gerais</option>
                <option value="PA">Pará</option>
                <option value="PB">Paraíba</option>
                <option value="PR">Paraná</option>
                <option value="PE">Pernambuco</option>
                <option value="PI">Piauí</option>
                <option value="RJ">Rio de Janeiro</option>
                <option value="RN">Rio Grande do Norte</option>
                <option value="RS">Rio Grande do Sul</option>
                <option value="RO">Rondônia</option>
                <option value="RR">Roraima</option>
                <option value="SC">Santa Catarina</option>
                <option value="SP">São Paulo</option>
                <option value="SE">Sergipe</option>
                <option value="TO">Tocantins</option>
              </select>
            </div>

<div class="row mb-3">
            <div class="col-12 col-sm-6 mb-3 mb-md-0 form-floating">
              <input type="text" class="form-control shadow-none" id="city" name="city" placeholder="Cidade" disabled required data-input />
              <label for="city">Cidade</label>
            </div>
<div class="col-12 col-sm-6 mb-3 mb-md-0 form-floating">
              <input type="text" class="form-control shadow-none" id="address" name="address" placeholder="Rua" disabled required data-input />
              <label for="address">Rua</label>
            </div>
<div class="col-12 col-sm-6 form-floating">
              <input type="text" class="form-control shadow-none" id="neighborhood" name="neighborhood" placeholder="Bairro" disabled required data-input />
              <label for="neighborhood">Bairro</label>
            </div>
<div class="col-12 col-sm-6 form-floating">
              <input type="text" class="form-control shadow-none" id="number" name="number" placeholder="Digite o número da residência" disabled required />
              <label for="number">Digite o número da residência</label>
            </div>
<div class="col-12 col-sm-6 mb-3 mb-md-0 form-floating">
              <input type="text" class="form-control shadow-none" id="complement"  name="complement" placeholder="Digite o complemento" disabled data-input/>
              <label for="complement">Digite o complemento</label>
            </div>

gitignore:
HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/
!**/src/main/**/build/
!**/src/test/**/build/

### VS Code ###
.vscode/


public Cliente(Map<String, ?> param) {
        System.out.println("Cliente part 1:  ");
        for (Field field : this.getClass().getDeclaredFields()) {
            for (Map.Entry<String, ?> entry : param.entrySet()) {
                if (field.getName().equalsIgnoreCase(entry.getKey())) {
                    try {
                        switch (field.getType().getSimpleName()) {
                            case "int":
                                field.set(this, Integer.parseInt((String) entry.getValue()));
                                break;
                            default:
                                field.set(this, entry.getValue().toString());
                                break;
                        }

                    } catch (IllegalArgumentException e) {
                        e.printStackTrace();
                    } catch (IllegalAccessException e) {
                        e.printStackTrace();
                    }
                }
            }
        }
    }



Syntax error in SQL statement "insert into LIVRO  ( autor,  ano,  título,  editora,  edicao,  isbn,  npaginas,  sinopse,  altura,  largura,  categorias,  peso,  profundidade,  precificacao,  barras )
VALUES ('ph',2023,'jose',WB',1,123,200,' joao e maria', 12.20 , 2.20, 'terror[*]', 23,2, 22.2 ,1101 );"; 

SQL statement:
insert into LIVRO  ( autor,  ano,  título,  editora,  edicao,  isbn,  npaginas,  sinopse,  altura,  largura,  categorias,  peso,  profundidade,  precificacao,  barras )
VALUES ('ph',2023,'jose',WB',1,123,200,' joao e maria', 12.20 , 2.20, 'terror', 23,2, 22.2 ,1101 ); [42000-199] 42000/42000 (Help)


org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into LIVRO  ( autor,  ano,  título,  editora,  edicao,  isbn,  npaginas,  sinopse,  altura,  largura,  categorias,  peso,  profundidade,  precificacao,  barras )
VALUES ('ph',2023,'jose',WB',1,123,200,' joao e maria', 12.20 , 2.20, 'terror[*]', 23,2, 22.2 ,1101 );"; 

SQL statement:
insert into LIVRO  ( autor,  ano,  título,  editora,  edicao,  isbn,  npaginas,  sinopse,  altura,  largura,  categorias,  peso,  profundidade,  precificacao,  barras )
VALUES ('ph',2023,'jose',WB',1,123,200,' joao e maria', 12.20 , 2.20, 'terror', 23,2, 22.2 ,1101 ); [42000-199]



insert into LIVRO  ( autor,  ano,  titulo,  editora,  edicao,  isbn,  npaginas,  sinopse,  altura,  largura,  categorias,  peso,  profundidade,  precificacao,  barras ) VALUES ('ph',2023,'jose','WB',1,123,200,' joao e maria', 12.20 , 2.20, 'terror', 23 , 2, 22.2 , 1101 );
insert into Cliente (senha , nome , datanasc , gen , email) VALUES  ('122' , '12' , '2023-03-06' , 'M' , '3@2' ); 
insert into Endereco (cliuid , pais , cep , estado , cidade , rua , bairro , numero , complemento , tiporesidencia) VALUES  ( 1  , 'BR' , '08780690' , 'SP' , 'Mogi das Cruzes' , 'Rua Professor Manoel Acelino de Mello' , 'Jardim Armênia' ,  21  , '21' , 'CASA' ); 
insert into Cartao (ncartao , bandeira , nomecli , cli_id , cv , preferencial) VALUES  ( 21  , 'Visa' , '21' ,  1  ,  22  ,  1  ); 



$(document).ready(function() {

  $('.color-choose input').on('click', function() {
      var headphonesColor = $(this).attr('data-image');

      $('.active').removeClass('active');
      $('.left-column img[data-image = ' + headphonesColor + ']').addClass('active');
      $(this).addClass('active');
  });

});







Map<String, ArrayList<String>> mapa = new HashMap<>();
        System.out.println(connectBD.EXE_Map("SELECT ORDEM_ID, LIVROID, QUANT FROM ORDDETAILS where CLI_ID = " +
                Integer.parseInt(init.getUid())
                + " AND ORDEM_ID = " + Integer.parseInt(ncard)));

        mapa.putAll(connectBD.EXE_Map("SELECT ORDEM_ID, LIVROID, QUANT FROM ORDDETAILS where CLI_ID = " +
                Integer.parseInt(init.getUid())
                + " AND ORDEM_ID = " + Integer.parseInt(ncard)));

        mapa.putAll(
                connectBD.EXE_Map("SELECT PRECIFICACAO FROM LIVRO where idlivro = " + mapa.get("LIVROID").get(0)));
        mapa.putAll(
                connectBD.EXE_Map("SELECT TOTAL FROM ORDEM where ORDEM_ID = " + mapa.get("ORDEM_ID").get(0)));
        mapa.putAll(
                connectBD.EXE_Map(
                        "SELECT VALOR, PAY_ID, CARTAOID FROM ORDPAY where ORDEM_ID = " + mapa.get("ORDEM_ID").get(0)));

        for (Entry<String, ArrayList<String>> endereco : mapa.entrySet()) {
            System.out.println(endereco.getKey() + " !! " + endereco.getValue());
        }

        String updateDetails = "UPDATE ORDDETAILS set QUANT = "
                + (Integer.parseInt(mapa.get("QUANT").get(0)) - 1)
                + " where ORDEM_ID = " + mapa.get("ORDEM_ID").get(0);

        String updateORDEM = "UPDATE ORDEM set TOTAL = "
                + ((Float.parseFloat(mapa.get("TOTAL").get(0))
                        - Float.parseFloat(mapa.get("PRECIFICACAO").get(0))))
                + " where ORDEM_ID = " + mapa.get("ORDEM_ID").get(0);



//////////////////////
 /* 0 */
        collum.addAll(connectBD.mrows("SELECT ORDEM_ID, LIVROID, QUANT FROM ORDDETAILS where CLI_ID = " +
                Integer.parseInt(init.getUid())
                + " AND ORDEM_ID = " + Integer.parseInt(ncard)));
        /* 1 */
        collum.addAll(connectBD.mrows("SELECT ORDEM_ID, LIVROID FROM ORDDETAILS where CLI_ID = "
                + Integer.parseInt(init.getUid())
                + " AND ORDEM_ID = " + Integer.parseInt(ncard)));
        /* 2 */
        collum.addAll(connectBD.mrows("SELECT PRECIFICACAO FROM LIVRO where idlivro = " + collum.get(1).get(1)));
        /* 3 */
        collum.addAll(connectBD.mrows("SELECT TOTAL FROM ORDEM where ORDEM_ID = " + collum.get(1).get(0)));
        /* 4 */
        collum.addAll(
                connectBD.mrows("SELECT VALOR, PAY_ID, CARTAOID FROM ORDPAY where ORDEM_ID = " + collum.get(1).get(0)));



CUPON - ADD BUTTON